variables:
  # keep this version in sync with the one defined in version.h
  VERSION: 2.1.1
  BUILD_NUMBER: $[counter(variables.VERSION, 12)]
  
  # make sure builds don't collide on the same agent
  BUILD_DIR: $(Build.BinariesDirectory)/$(Build.SourceBranchName)/$(System.PhaseName)

  ARTIFACT_DIR: $(Build.ArtifactStagingDirectory)

name: $(VERSION)+$(BUILD_NUMBER)

stages:
- stage: BuildPackages
  displayName: Build packages
  jobs:
  - job: windows
    displayName: Windows

    variables:
      BIN_OUT_DIR: $(BUILD_DIR)\linecnt
      BIN_INT_DIR: $(BUILD_DIR)\obj

      PKG_OUT_DIR: $(BUILD_DIR)\package-$(Build.BuildNumber)

    pool:
      vmImage: windows-2019

    steps:
    - task: NuGetCommand@2
      displayName: Restore Nuget Packages
      inputs:
        command: 'restore'
        restoreSolution: 'linecnt.sln'
        feedsToUse: 'select'
        vstsFeed: 'https://api.nuget.org/v3/index.json'

    - task: MSBuild@1
      displayName: Build
      inputs:
        solution: 'linecnt.vcxproj'
        msbuildArchitecture: 'x64'
        platform: 'x64'
        configuration: 'Release'
        msbuildArguments: '/property:OutDir=$(BIN_OUT_DIR)\;IntDir=$(BIN_INT_DIR)\;AZP_BUILD_NUMBER=$(BUILD_NUMBER)'

    - task: MSBuild@1
      displayName: Build Test
      inputs:
        solution: 'src\test\test.vcxproj'
        msbuildArchitecture: 'x64'
        platform: 'x64'
        configuration: 'Release'
        msbuildArguments: '/property:OutDir=$(BIN_OUT_DIR)\;IntDir=$(BIN_INT_DIR)\test\'
        
    - script: |
        $(BIN_OUT_DIR)\utest.exe --gtest_output=xml:$(TEST_RSLT_DIR)/$(TEST_RSLT_FILE)
      displayName: Run Test
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: "JUnit"
        testResultsFiles: '$(TEST_RSLT_FILE)'
        searchFolder: '$(TEST_RSLT_DIR)'

      # collect package files (quote all paths or forward slashes are interpreted as options otherwise)
    - script: |
        mkdir "$(PKG_OUT_DIR)"
        move /Y "$(BIN_OUT_DIR)\linecnt.exe" "$(PKG_OUT_DIR)\"

    - task: ArchiveFiles@2
      displayName: Make Package
      inputs:
        rootFolderOrFile: '$(PKG_OUT_DIR)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(ARTIFACT_DIR)/linecnt-win-x64-$(Build.BuildNumber).zip'
        replaceExistingArchive: true

    - publish: '$(ARTIFACT_DIR)/linecnt-win-x64-$(Build.BuildNumber).zip'
      artifact: Windows package

  - job: linux
    displayName: Linux
    # actual display name will be `System.JobDisplayName + ' ' + System.JobName`
    # System.JobName is Fedora
    strategy:
      matrix:
        Fedora:
          DIST_NAME: fedora
          DIST_ABBR: fed
        Ubuntu:
          DIST_NAME: ubuntu
          DIST_ABBR: ubu

    variables:
      # give each matrix configuration its own build directory
      BUILD_DIST_DIR: $(BUILD_DIR)/$(DIST_NAME)

    pool:
      vmImage: ubuntu-latest
    container: stonesteps/linecnt-$(DIST_NAME):latest

    steps:
    - script: |
        make BLDDIR=$(BUILD_DIST_DIR) AZP_BUILD_NUMBER=$(BUILD_NUMBER)
      displayName: Build

    - script: |
        make BLDDIR=$(BUILD_DIST_DIR) TEST_RSLT_DIR=$(TEST_RSLT_DIR) TEST_RSLT_FILE=$(TEST_RSLT_FILE) test
      displayName: Test  
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: "JUnit"
        testResultsFiles: '$(TEST_RSLT_FILE)'
        searchFolder: '$(TEST_RSLT_DIR)'

    - script: |
        tar -czvf $(ARTIFACT_DIR)/linecnt-$(DIST_ABBR)-x64-$(Build.BuildNumber).tar.gz -C $(BUILD_DIST_DIR) linecnt
      displayName: Package

    - publish: '$(ARTIFACT_DIR)/linecnt-$(DIST_ABBR)-x64-$(Build.BuildNumber).tar.gz'
      artifact: $(System.JobName) package
